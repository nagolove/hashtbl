#!/usr/bin/env lua

local inspect = require "inspect"

local set = "!#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~"

local trigraphs = {
    "??=", 
    "??/", 
    "??'", 
    "??(", 
    "??\\)",
    "??!", 
    "??<",
    "??>",
    "??-",
}

suffix = ""
minlen = 5
maxlen = 40
count = 1000

for k = 1, #arg do
    local ok, errmsg = pcall(function()
        load(arg[k])()
    end)
    if not ok then
        print('errmsg', errmsg)
        os.exit(false)
    end
end

--local fname = string.format("string_data%s.h", suffix)
--print('fname', fname)

local stuff = {}
for i = 1, count do
    local len = math.random(minlen, maxlen)
    local s = ""
    for j = 1, len do
        local index = math.random(1, #set)
        s = s .. string.sub(set, index, index)
    end
    -- удалить триграфы
    for _, trig in pairs(trigraphs) do
        local ok, errmsg = pcall(function()
            s = string.gsub(s, trig, "")
        end)
        if not ok then
            io.stderr:write('errmsg ' .. errmsg .. "\n")
            io.stderr:write(s .. " " .. trig .. "\n")
            os.exit(false)
        end
    end
    stuff[#stuff + 1] = s
end

table.sort(stuff, function(a, b) return a < b end)

--[[
local f = io.open(fname, "w")
for i, str in ipairs(stuff) do
    f:write(string.format('{ "%s", %d }, \n', str, i))
end
f:close()
--]]
for i, str in ipairs(stuff) do
    print(string.format('{ "%s", %d }, \n', str, i))
end
